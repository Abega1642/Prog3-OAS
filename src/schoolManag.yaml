openapi: "3.0.2"
info:
  title: Student Course Management API
  version: "1.0.0"
servers:
  - url: https://api.server.test/v1
paths:
  /groups:
    get:
      operationId: getAllGroups
      tags:
        - Groups
      summary: get all groups
      parameters:
        - $ref: "#/components/parameters/groupName"
        - $ref: "#/components/parameters/groupYear"
      responses:
        200:
          description: list of all groups or of a specific group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/group"
        400:
          description: Invalid input data.

  /group/add:
    post:
      operationId: addGroup
      tags:
        - Groups
      summary: add a or some new group(s)
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/group"
      responses:
        201:
          description: group(s) created with success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/group"
        400:
          description: Invalid input data.

  /group/update/{groupId}:
    put:
      operationId: updateGroup
      tags:
        - Groups
      summary: Update or create a group
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        200:
          description: Group updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        201:
          description: Group created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        400:
          description: Invalid input data.

  /group/delete/{groupId}:
    delete:
      operationId: deleteGroup
      tags:
        - Groups
      summary: delete a group
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        200:
          description: group deleted with success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/group"
        400:
          description: Invalid input data.

  /students:
    get:
      operationId: getAllStudents
      tags:
        - Students
      summary: get all students
      parameters:
        - $ref: "#/components/parameters/studentName"
      responses:
        200:
          description: list of all student or of a specific student
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/student"
        400:
          description: Invalid input data.

  /student/add:
    post:
      operationId: addStudent
      tags:
        - Students
      summary: add a or some new student(s)
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/student"
      responses:
        201:
          description: student(s) added with success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/student"
        400:
          description: Invalid input data.

  /student/update/{reference}:
    put:
      operationId: updateStudent
      tags:
        - Students
      summary: update a student
      parameters:
        - $ref: "#/components/parameters/reference"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: student updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        '201':
          description: student added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        400:
          description: Invalid input data.

  /student/delete/{reference}:
    delete:
      operationId: student
      tags:
        - Students
      summary: delete a student
      parameters:
        - $ref: "#/components/parameters/reference"
      responses:
        200:
          description: student deleted with success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/student"
        400:
          description: Invalid input data.

components:
  parameters:
    groupName:
      in: query
      name: groupName
      required: false
      schema:
        type: string
        example: J1
        description: Name of the group
    groupId:
      in: path
      name: groupId
      required: true
      schema:
        type: string
        example: 2023-G01
    reference:
      in: path
      name: reference
      required: true
      schema:
        type: string
        pattern: ^STD\d{5}$
        example: STD23028
    studentName:
      in: query
      name: studentName
      required: false
      schema:
        type: string
        example: Abegà Razafindratelo
        description: Name of a student
    groupYear:
      name: groupYear
      in: query
      description: Start and end of group year date interval (two values allowed)
      required: false
      schema:
        type: string
        pattern: ^\d{4}-\d{2}-\d{2};\d{4}-\d{2}-\d{2}$
        example : 2021;2023
  schemas:
    student:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          nullable: false
        Name:
          type: string
          example: Abegà Razafindratelo
        Sex:
          type: string
          enum: [M, F]
        birthday:
          type: string
          format: date
        reference:
          type: string
          pattern: ^STD\d{5}$
          example: STD23028
    group:
      type: object
      properties:
        ID:
          type: string
          example: 2023-G01
          nullable: false
        groupName:
          type: string
          example : J1
        promotion:
          type: string
          enum: [G, H, J, K]
        studentNb:
          type: integer
          format: int32
        students:
          type: array
          items:
            $ref: "#/components/schemas/student"
